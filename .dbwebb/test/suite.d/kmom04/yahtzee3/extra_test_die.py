#!/usr/bin/env python3
"""
An autogenerated testfile for python.
"""

import unittest
import os
import random
import sys
from io import StringIO
from unittest.mock import patch
from unittest import TextTestRunner
from examiner import ExamTestCase, ExamTestResult, tags
from examiner import import_module, find_path_to_assignment


FILE_DIR = os.path.dirname(os.path.realpath(__file__))
REPO_PATH = find_path_to_assignment(FILE_DIR)

if REPO_PATH not in sys.path:
    sys.path.insert(0, REPO_PATH)

# Path to file and basename of the file to import
die = import_module(REPO_PATH, 'src/die')


class Test4Die(ExamTestCase):
    """
    Testing the class Die.
    """
    def setUp(self):
        random.seed("yahtzee")


    @tags("die")
    def test_value(self):
        """
        Testar att property `value` returnerar rätt värde.
        Skapar tärning med följande värde:
        {arguments}
        Förväntar att värdet 6 returneras:
        {correct}
        Innehöll följande:
        {student}
        """
        self._argument = 6
        d1 = die.Die(6)
        self.assertEqual(d1.value, 6)

    @tags("die")
    def test_value_property(self):
        """
        Testar att `value` är ett property.
        Förväntar att följande rad returnerar True, isinstance(type(d1).value, property):
        {correct}
        Innehöll följande:
        {student}
        """
        self._argument = 6
        d1 = die.Die(6)
        self.assertTrue(isinstance(type(d1).value, property))


if __name__ == '__main__':
    runner = TextTestRunner(resultclass=ExamTestResult, verbosity=2)
    unittest.main(testRunner=runner, exit=False)
